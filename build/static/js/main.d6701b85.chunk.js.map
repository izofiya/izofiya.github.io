{"version":3,"sources":["Breeds/Breeds.js","Breeds/Breed.js","Breeds/Dog.js","index.js"],"names":["Spinner","react_default","a","createElement","className","Breeds","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","breedsList","inherits","createClass","key","value","_this2","setTimeout","fetch","then","response","json","setState","_this3","Breeds_Spinner","message","map","breed","index","isActive","onClick","onBreedsSelected","React","Component","Breed","breedImage","url","breedName","fetchBreed","prevProps","Breed_Spinner","urlImg","onDogSelected","src","Dog","dog","Panel","isActiveItem","token","Dog_Dog","Breed_Breed","Breeds_Breeds","ReactDOM","render","src_Panel","document","getElementById"],"mappings":"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","file":"static/js/main.d6701b85.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Spinner = () => <div className=\"loader\"></div>\r\n\r\nexport class Breeds extends React.Component {\r\n    constructor(props) {\r\n        super (props);\r\n        this.state = {\r\n        isLoading: true,\r\n        breedsList: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            fetch('https://dog.ceo/api/breeds/list').then(response => response.json()).then(breedsList => {\r\n          this.setState({\r\n            breedsList: breedsList,\r\n            isLoading: false\r\n          });\r\n        }\r\n        )}, 500);\r\n        }\r\n    render () {\r\n        if(this.state.isLoading) {\r\n            return <Spinner/>\r\n        }\r\n        return (\r\n            <div>\r\n            <ul>    \r\n                {this.state.breedsList.message.map((breed, index) => (\r\n                    <li\r\n                    className={this.props.isActive === breed ? \"activeItemClass\" : null} \r\n                    key={index}\r\n                    onClick={() => this.props.onBreedsSelected(breed)}\r\n                    >{breed}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nconst Spinner = () => <div className=\"loader\"></div>\r\n\r\nexport class Breed extends React.Component {\r\n    constructor(props) {\r\n        super (props);\r\n        this.state = {\r\n        breedImage: null,\r\n        isLoading: true\r\n        }\r\n    }\r\n\r\n    fetchBreed () {\r\n        let url = 'https://dog.ceo/api/breed/affenpinscher/images';\r\n        if(this.props.breedName) {\r\n            url = 'https://dog.ceo/api/breed/' + this.props.breedName + '/images';\r\n        }\r\n        setTimeout(() => {\r\n        fetch(url).then(response => response.json()).then(breedImage => {\r\n          this.setState({\r\n            breedImage: breedImage,\r\n            isLoading: false\r\n          });\r\n        })}, 500);\r\n    }\r\n    componentDidMount() {\r\n        this.fetchBreed ();\r\n        }\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.breedName !== this.props.breedName) {\r\n            this.setState({\r\n                isLoading: true\r\n            });\r\n        }\r\n        this.fetchBreed ();\r\n        }\r\n    render () {\r\n        if(this.state.isLoading) {\r\n            return <Spinner/>\r\n        }\r\n        return (\r\n            <ul>    \r\n                {this.state.breedImage.message.map((urlImg, index) => (\r\n                    <li \r\n                    onClick = {() => this.props.onDogSelected(urlImg)}\r\n                    className=\"liImgBreedClass\"\r\n                    key={index}>\r\n                    <img className=\"imgClass\"\r\n                    src={urlImg}/>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport const Dog = props => (\r\n  <div>    \r\n    <img className=\"dogClass\" src={props.dog}/>\r\n  </div>\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Breeds} from './Breeds/Breeds.js';\nimport {Breed} from './Breeds/Breed.js';\nimport {Dog} from './Breeds/Dog.js';\nimport './index.css';\n\nclass Panel extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isActiveItem: false,\n      token: '+ ',\n      breed: '',\n      dog: ''\n    }\n  }\n\n  render() {\n   return (\n     <div className=\"breedsClass\"> \n         <h3 \n         onClick={() => this.setState({\n             isActiveItem: !this.state.isActiveItem,\n             token: (this.state.token === '+ ' ? '- ' : '+ '),\n             breed: '',\n             dog: ''\n         })}\n         >{this.state.token}BREEDS LIST</h3>\n         <hr />\n         {this.state.dog ? <Dog dog={this.state.dog}/> : null}\n         {this.state.breed ? <Breed\n            onDogSelected = {dog => {\n                this.setState({\n                  dog: dog\n                })\n            }}\n            breedName={this.state.breed}\n         /> : null}\n         {this.state.isActiveItem ? <Breeds\n            isActive={this.state.breed}\n            onBreedsSelected = {breed => {\n                this.setState({\n                    breed: breed,\n                    dog: ''\n                })\n            }}\n         /> : null}\n     </div>  \n   )}\n}\n\nReactDOM.render(<Panel />, document.getElementById('root'));"],"sourceRoot":""}